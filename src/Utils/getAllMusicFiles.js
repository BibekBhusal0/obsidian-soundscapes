import fs from "fs";
import path from "path";
const MUSIC_FILE_EXTENSIONS = ["mp3"];
/**
 * Given a file path, builds a list of music files by recursively going through the file structure and finding
 * files with appropriate file extensions.
 * @param dirPath
 * @param fileArray
 */
const getAllMusicFiles = (dirPath, fileArray = undefined) => {
    const files = fs.readdirSync(dirPath);
    fileArray = fileArray || [];
    files.forEach((file) => {
        const filePath = path.join(dirPath, file);
        if (fs.statSync(filePath).isDirectory()) {
            fileArray = getAllMusicFiles(filePath, fileArray);
        }
        else if (MUSIC_FILE_EXTENSIONS.includes(path.extname(filePath).slice(1))) {
            fileArray === null || fileArray === void 0 ? void 0 : fileArray.push(filePath);
        }
    });
    return fileArray;
};
export default getAllMusicFiles;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0QWxsTXVzaWNGaWxlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImdldEFsbE11c2ljRmlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE1BQU0sSUFBSSxDQUFDO0FBQ3BCLE9BQU8sSUFBSSxNQUFNLE1BQU0sQ0FBQztBQUV4QixNQUFNLHFCQUFxQixHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7QUFFdEM7Ozs7O0dBS0c7QUFDSCxNQUFNLGdCQUFnQixHQUFHLENBQ3hCLE9BQWUsRUFDZixZQUF1QyxTQUFTLEVBQy9DLEVBQUU7SUFDSCxNQUFNLEtBQUssR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBRXRDLFNBQVMsR0FBRyxTQUFTLElBQUksRUFBRSxDQUFDO0lBRTVCLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTtRQUN0QixNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsQ0FBQztRQUMxQyxJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQztZQUN6QyxTQUFTLEdBQUcsZ0JBQWdCLENBQUMsUUFBUSxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBQ25ELENBQUM7YUFBTSxJQUNOLHFCQUFxQixDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUM5RCxDQUFDO1lBQ0YsU0FBUyxhQUFULFNBQVMsdUJBQVQsU0FBUyxDQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUMzQixDQUFDO0lBQ0YsQ0FBQyxDQUFDLENBQUM7SUFFSCxPQUFPLFNBQVMsQ0FBQztBQUNsQixDQUFDLENBQUM7QUFFRixlQUFlLGdCQUFnQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZzIGZyb20gXCJmc1wiO1xyXG5pbXBvcnQgcGF0aCBmcm9tIFwicGF0aFwiO1xyXG5cclxuY29uc3QgTVVTSUNfRklMRV9FWFRFTlNJT05TID0gW1wibXAzXCJdO1xyXG5cclxuLyoqXHJcbiAqIEdpdmVuIGEgZmlsZSBwYXRoLCBidWlsZHMgYSBsaXN0IG9mIG11c2ljIGZpbGVzIGJ5IHJlY3Vyc2l2ZWx5IGdvaW5nIHRocm91Z2ggdGhlIGZpbGUgc3RydWN0dXJlIGFuZCBmaW5kaW5nXHJcbiAqIGZpbGVzIHdpdGggYXBwcm9wcmlhdGUgZmlsZSBleHRlbnNpb25zLlxyXG4gKiBAcGFyYW0gZGlyUGF0aFxyXG4gKiBAcGFyYW0gZmlsZUFycmF5XHJcbiAqL1xyXG5jb25zdCBnZXRBbGxNdXNpY0ZpbGVzID0gKFxyXG5cdGRpclBhdGg6IHN0cmluZyxcclxuXHRmaWxlQXJyYXk6IEFycmF5PHN0cmluZz4gfCB1bmRlZmluZWQgPSB1bmRlZmluZWRcclxuKSA9PiB7XHJcblx0Y29uc3QgZmlsZXMgPSBmcy5yZWFkZGlyU3luYyhkaXJQYXRoKTtcclxuXHJcblx0ZmlsZUFycmF5ID0gZmlsZUFycmF5IHx8IFtdO1xyXG5cclxuXHRmaWxlcy5mb3JFYWNoKChmaWxlKSA9PiB7XHJcblx0XHRjb25zdCBmaWxlUGF0aCA9IHBhdGguam9pbihkaXJQYXRoLCBmaWxlKTtcclxuXHRcdGlmIChmcy5zdGF0U3luYyhmaWxlUGF0aCkuaXNEaXJlY3RvcnkoKSkge1xyXG5cdFx0XHRmaWxlQXJyYXkgPSBnZXRBbGxNdXNpY0ZpbGVzKGZpbGVQYXRoLCBmaWxlQXJyYXkpO1xyXG5cdFx0fSBlbHNlIGlmIChcclxuXHRcdFx0TVVTSUNfRklMRV9FWFRFTlNJT05TLmluY2x1ZGVzKHBhdGguZXh0bmFtZShmaWxlUGF0aCkuc2xpY2UoMSkpXHJcblx0XHQpIHtcclxuXHRcdFx0ZmlsZUFycmF5Py5wdXNoKGZpbGVQYXRoKTtcclxuXHRcdH1cclxuXHR9KTtcclxuXHJcblx0cmV0dXJuIGZpbGVBcnJheTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGdldEFsbE11c2ljRmlsZXM7XHJcbiJdfQ==