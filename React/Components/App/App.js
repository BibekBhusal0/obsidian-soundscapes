import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useEffect, useState } from "react";
import { useObsidianPluginContext } from "../../Context/ObsidianPluginContext";
import Icon from "../Icon/Icon";
import Header from "../Header/Header";
import secondsToMinutesAndSeconds from "../../Utils/secondsToMinutesAndSeconds";
import { PLAYER_STATE } from "src/Types/Enums";
const App = () => {
    const { settingsObservable, localPlayerStateObservable, plugin } = useObsidianPluginContext();
    const [settings, setSettings] = useState(settingsObservable === null || settingsObservable === void 0 ? void 0 : settingsObservable.getValue());
    const [localPlayerState, setLocalPlayerState] = useState(localPlayerStateObservable === null || localPlayerStateObservable === void 0 ? void 0 : localPlayerStateObservable.getValue());
    /**
     * Subscribe to settings from Obsidian
     */
    useEffect(() => {
        const unsubscribe = settingsObservable === null || settingsObservable === void 0 ? void 0 : settingsObservable.onChange((newSettings) => {
            setSettings(newSettings);
        });
        return () => {
            unsubscribe === null || unsubscribe === void 0 ? void 0 : unsubscribe();
        };
    }, [setSettings]);
    /**
     * Subscribe to local player state from Obsidian
     */
    useEffect(() => {
        const unsubscribe = localPlayerStateObservable === null || localPlayerStateObservable === void 0 ? void 0 : localPlayerStateObservable.onChange((newState) => {
            setLocalPlayerState(newState);
        });
        return () => {
            unsubscribe === null || unsubscribe === void 0 ? void 0 : unsubscribe();
        };
    }, [setLocalPlayerState]);
    return (_jsxs(_Fragment, { children: [_jsx(Header, {}), _jsx("div", { className: "soundscapesmymusic-musiclist", children: _jsxs("table", { className: "soundscapesmymusic-musiclist-table", children: [_jsx("thead", { children: _jsxs("tr", { children: [_jsx("th", {}), _jsx("th", { children: "Title" }), _jsx("th", { children: "Artist" }), _jsx("th", { children: "Album" }), _jsx("th", { children: "Time" })] }) }), _jsx("tbody", { children: settings.myMusicIndex.map((song) => {
                                var _a, _b;
                                return (_jsxs("tr", { onDoubleClick: () => plugin === null || plugin === void 0 ? void 0 : plugin.changeMyMusicTrack(song.fileName), children: [_jsxs("td", { children: [((_a = localPlayerState.currentTrack) === null || _a === void 0 ? void 0 : _a.fileName) ===
                                                    song.fileName &&
                                                    localPlayerState.playerState ===
                                                        PLAYER_STATE.PLAYING && (_jsx(Icon, { name: "volume-2" })), ((_b = localPlayerState.currentTrack) === null || _b === void 0 ? void 0 : _b.fileName) ===
                                                    song.fileName &&
                                                    localPlayerState.playerState ===
                                                        PLAYER_STATE.PAUSED && (_jsx(Icon, { name: "volume" }))] }), _jsx("td", { children: song.title }), _jsx("td", { children: song.artist }), _jsx("td", { children: song.album }), _jsx("td", { children: secondsToMinutesAndSeconds(song.duration || 0) })] }, song.fullPath));
                            }) })] }) })] }));
};
export default App;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXBwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQXBwLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsTUFBTSxPQUFPLENBQUM7QUFDNUMsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDL0UsT0FBTyxJQUFJLE1BQU0sY0FBYyxDQUFDO0FBQ2hDLE9BQU8sTUFBTSxNQUFNLGtCQUFrQixDQUFDO0FBQ3RDLE9BQU8sMEJBQTBCLE1BQU0sd0NBQXdDLENBQUM7QUFFaEYsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRy9DLE1BQU0sR0FBRyxHQUFHLEdBQUcsRUFBRTtJQUNoQixNQUFNLEVBQUUsa0JBQWtCLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxFQUFFLEdBQy9ELHdCQUF3QixFQUFFLENBQUM7SUFDNUIsTUFBTSxDQUFDLFFBQVEsRUFBRSxXQUFXLENBQUMsR0FBRyxRQUFRLENBQ3ZDLGtCQUFrQixhQUFsQixrQkFBa0IsdUJBQWxCLGtCQUFrQixDQUFFLFFBQVEsRUFBRSxDQUM5QixDQUFDO0lBQ0YsTUFBTSxDQUFDLGdCQUFnQixFQUFFLG1CQUFtQixDQUFDLEdBQUcsUUFBUSxDQUN2RCwwQkFBMEIsYUFBMUIsMEJBQTBCLHVCQUExQiwwQkFBMEIsQ0FBRSxRQUFRLEVBQUUsQ0FDdEMsQ0FBQztJQUVGOztPQUVHO0lBQ0gsU0FBUyxDQUFDLEdBQUcsRUFBRTtRQUNkLE1BQU0sV0FBVyxHQUFHLGtCQUFrQixhQUFsQixrQkFBa0IsdUJBQWxCLGtCQUFrQixDQUFFLFFBQVEsQ0FDL0MsQ0FBQyxXQUFzQyxFQUFFLEVBQUU7WUFDMUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQzFCLENBQUMsQ0FDRCxDQUFDO1FBRUYsT0FBTyxHQUFHLEVBQUU7WUFDWCxXQUFXLGFBQVgsV0FBVyx1QkFBWCxXQUFXLEVBQUksQ0FBQztRQUNqQixDQUFDLENBQUM7SUFDSCxDQUFDLEVBQUUsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO0lBRWxCOztPQUVHO0lBQ0gsU0FBUyxDQUFDLEdBQUcsRUFBRTtRQUNkLE1BQU0sV0FBVyxHQUFHLDBCQUEwQixhQUExQiwwQkFBMEIsdUJBQTFCLDBCQUEwQixDQUFFLFFBQVEsQ0FDdkQsQ0FBQyxRQUEwQixFQUFFLEVBQUU7WUFDOUIsbUJBQW1CLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDL0IsQ0FBQyxDQUNELENBQUM7UUFFRixPQUFPLEdBQUcsRUFBRTtZQUNYLFdBQVcsYUFBWCxXQUFXLHVCQUFYLFdBQVcsRUFBSSxDQUFDO1FBQ2pCLENBQUMsQ0FBQztJQUNILENBQUMsRUFBRSxDQUFDLG1CQUFtQixDQUFDLENBQUMsQ0FBQztJQUUxQixPQUFPLENBQ04sOEJBQ0MsS0FBQyxNQUFNLEtBQUcsRUFDVixjQUFLLFNBQVMsRUFBQyw4QkFBOEIsWUFDNUMsaUJBQU8sU0FBUyxFQUFDLG9DQUFvQyxhQUNwRCwwQkFDQyx5QkFDQyxjQUFTLEVBQ1QsaUNBQWMsRUFDZCxrQ0FBZSxFQUNmLGlDQUFjLEVBQ2QsZ0NBQWEsSUFDVCxHQUNFLEVBQ1IsMEJBQ0UsUUFBUSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTs7Z0NBQUMsT0FBQSxDQUNwQyxjQUVDLGFBQWEsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsTUFBTSxhQUFOLE1BQU0sdUJBQU4sTUFBTSxDQUFFLGtCQUFrQixDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsYUFHMUMseUJBQ0UsQ0FBQSxNQUFBLGdCQUFnQixDQUFDLFlBQVksMENBQUUsUUFBUTtvREFDdkMsSUFBSSxDQUFDLFFBQVE7b0RBQ2IsZ0JBQWdCLENBQUMsV0FBVzt3REFDNUIsWUFBWSxDQUFDLE9BQU8sSUFBSSxDQUN2QixLQUFDLElBQUksSUFBQyxJQUFJLEVBQUMsVUFBVSxHQUFHLENBQ3hCLEVBRUQsQ0FBQSxNQUFBLGdCQUFnQixDQUFDLFlBQVksMENBQUUsUUFBUTtvREFDdkMsSUFBSSxDQUFDLFFBQVE7b0RBQ2IsZ0JBQWdCLENBQUMsV0FBVzt3REFDNUIsWUFBWSxDQUFDLE1BQU0sSUFBSSxDQUN0QixLQUFDLElBQUksSUFBQyxJQUFJLEVBQUMsUUFBUSxHQUFHLENBQ3RCLElBQ0UsRUFDTCx1QkFBSyxJQUFJLENBQUMsS0FBSyxHQUFNLEVBQ3JCLHVCQUFLLElBQUksQ0FBQyxNQUFNLEdBQU0sRUFDdEIsdUJBQUssSUFBSSxDQUFDLEtBQUssR0FBTSxFQUNyQix1QkFDRSwwQkFBMEIsQ0FDMUIsSUFBSSxDQUFDLFFBQVEsSUFBSSxDQUFDLENBQ2xCLEdBQ0csS0EzQkEsSUFBSSxDQUFDLFFBQVEsQ0E0QmQsQ0FDTCxDQUFBOzZCQUFBLENBQUMsR0FDSyxJQUNELEdBQ0gsSUFDSixDQUNILENBQUM7QUFDSCxDQUFDLENBQUM7QUFFRixlQUFlLEdBQUcsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZU9ic2lkaWFuUGx1Z2luQ29udGV4dCB9IGZyb20gXCIuLi8uLi9Db250ZXh0L09ic2lkaWFuUGx1Z2luQ29udGV4dFwiO1xuaW1wb3J0IEljb24gZnJvbSBcIi4uL0ljb24vSWNvblwiO1xuaW1wb3J0IEhlYWRlciBmcm9tIFwiLi4vSGVhZGVyL0hlYWRlclwiO1xuaW1wb3J0IHNlY29uZHNUb01pbnV0ZXNBbmRTZWNvbmRzIGZyb20gXCIuLi8uLi9VdGlscy9zZWNvbmRzVG9NaW51dGVzQW5kU2Vjb25kc1wiO1xuaW1wb3J0IHsgTG9jYWxQbGF5ZXJTdGF0ZSB9IGZyb20gXCJzcmMvVHlwZXMvSW50ZXJmYWNlc1wiO1xuaW1wb3J0IHsgUExBWUVSX1NUQVRFIH0gZnJvbSBcInNyYy9UeXBlcy9FbnVtc1wiO1xuaW1wb3J0IHsgU291bmRzY2FwZXNQbHVnaW5TZXR0aW5ncyB9IGZyb20gXCJzcmMvU2V0dGluZ3MvU2V0dGluZ3NcIjtcblxuY29uc3QgQXBwID0gKCkgPT4ge1xuXHRjb25zdCB7IHNldHRpbmdzT2JzZXJ2YWJsZSwgbG9jYWxQbGF5ZXJTdGF0ZU9ic2VydmFibGUsIHBsdWdpbiB9ID1cblx0XHR1c2VPYnNpZGlhblBsdWdpbkNvbnRleHQoKTtcblx0Y29uc3QgW3NldHRpbmdzLCBzZXRTZXR0aW5nc10gPSB1c2VTdGF0ZTxTb3VuZHNjYXBlc1BsdWdpblNldHRpbmdzPihcblx0XHRzZXR0aW5nc09ic2VydmFibGU/LmdldFZhbHVlKCksXG5cdCk7XG5cdGNvbnN0IFtsb2NhbFBsYXllclN0YXRlLCBzZXRMb2NhbFBsYXllclN0YXRlXSA9IHVzZVN0YXRlPExvY2FsUGxheWVyU3RhdGU+KFxuXHRcdGxvY2FsUGxheWVyU3RhdGVPYnNlcnZhYmxlPy5nZXRWYWx1ZSgpLFxuXHQpO1xuXG5cdC8qKlxuXHQgKiBTdWJzY3JpYmUgdG8gc2V0dGluZ3MgZnJvbSBPYnNpZGlhblxuXHQgKi9cblx0dXNlRWZmZWN0KCgpID0+IHtcblx0XHRjb25zdCB1bnN1YnNjcmliZSA9IHNldHRpbmdzT2JzZXJ2YWJsZT8ub25DaGFuZ2UoXG5cdFx0XHQobmV3U2V0dGluZ3M6IFNvdW5kc2NhcGVzUGx1Z2luU2V0dGluZ3MpID0+IHtcblx0XHRcdFx0c2V0U2V0dGluZ3MobmV3U2V0dGluZ3MpO1xuXHRcdFx0fSxcblx0XHQpO1xuXG5cdFx0cmV0dXJuICgpID0+IHtcblx0XHRcdHVuc3Vic2NyaWJlPy4oKTtcblx0XHR9O1xuXHR9LCBbc2V0U2V0dGluZ3NdKTtcblxuXHQvKipcblx0ICogU3Vic2NyaWJlIHRvIGxvY2FsIHBsYXllciBzdGF0ZSBmcm9tIE9ic2lkaWFuXG5cdCAqL1xuXHR1c2VFZmZlY3QoKCkgPT4ge1xuXHRcdGNvbnN0IHVuc3Vic2NyaWJlID0gbG9jYWxQbGF5ZXJTdGF0ZU9ic2VydmFibGU/Lm9uQ2hhbmdlKFxuXHRcdFx0KG5ld1N0YXRlOiBMb2NhbFBsYXllclN0YXRlKSA9PiB7XG5cdFx0XHRcdHNldExvY2FsUGxheWVyU3RhdGUobmV3U3RhdGUpO1xuXHRcdFx0fSxcblx0XHQpO1xuXG5cdFx0cmV0dXJuICgpID0+IHtcblx0XHRcdHVuc3Vic2NyaWJlPy4oKTtcblx0XHR9O1xuXHR9LCBbc2V0TG9jYWxQbGF5ZXJTdGF0ZV0pO1xuXG5cdHJldHVybiAoXG5cdFx0PD5cblx0XHRcdDxIZWFkZXIgLz5cblx0XHRcdDxkaXYgY2xhc3NOYW1lPVwic291bmRzY2FwZXNteW11c2ljLW11c2ljbGlzdFwiPlxuXHRcdFx0XHQ8dGFibGUgY2xhc3NOYW1lPVwic291bmRzY2FwZXNteW11c2ljLW11c2ljbGlzdC10YWJsZVwiPlxuXHRcdFx0XHRcdDx0aGVhZD5cblx0XHRcdFx0XHRcdDx0cj5cblx0XHRcdFx0XHRcdFx0PHRoPjwvdGg+XG5cdFx0XHRcdFx0XHRcdDx0aD5UaXRsZTwvdGg+XG5cdFx0XHRcdFx0XHRcdDx0aD5BcnRpc3Q8L3RoPlxuXHRcdFx0XHRcdFx0XHQ8dGg+QWxidW08L3RoPlxuXHRcdFx0XHRcdFx0XHQ8dGg+VGltZTwvdGg+XG5cdFx0XHRcdFx0XHQ8L3RyPlxuXHRcdFx0XHRcdDwvdGhlYWQ+XG5cdFx0XHRcdFx0PHRib2R5PlxuXHRcdFx0XHRcdFx0e3NldHRpbmdzLm15TXVzaWNJbmRleC5tYXAoKHNvbmcpID0+IChcblx0XHRcdFx0XHRcdFx0PHRyXG5cdFx0XHRcdFx0XHRcdFx0a2V5PXtzb25nLmZ1bGxQYXRofVxuXHRcdFx0XHRcdFx0XHRcdG9uRG91YmxlQ2xpY2s9eygpID0+XG5cdFx0XHRcdFx0XHRcdFx0XHRwbHVnaW4/LmNoYW5nZU15TXVzaWNUcmFjayhzb25nLmZpbGVOYW1lKVxuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0PlxuXHRcdFx0XHRcdFx0XHRcdDx0ZD5cblx0XHRcdFx0XHRcdFx0XHRcdHtsb2NhbFBsYXllclN0YXRlLmN1cnJlbnRUcmFjaz8uZmlsZU5hbWUgPT09XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHNvbmcuZmlsZU5hbWUgJiZcblx0XHRcdFx0XHRcdFx0XHRcdFx0bG9jYWxQbGF5ZXJTdGF0ZS5wbGF5ZXJTdGF0ZSA9PT1cblx0XHRcdFx0XHRcdFx0XHRcdFx0UExBWUVSX1NUQVRFLlBMQVlJTkcgJiYgKFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdDxJY29uIG5hbWU9XCJ2b2x1bWUtMlwiIC8+XG5cdFx0XHRcdFx0XHRcdFx0XHRcdCl9XG5cblx0XHRcdFx0XHRcdFx0XHRcdHtsb2NhbFBsYXllclN0YXRlLmN1cnJlbnRUcmFjaz8uZmlsZU5hbWUgPT09XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHNvbmcuZmlsZU5hbWUgJiZcblx0XHRcdFx0XHRcdFx0XHRcdFx0bG9jYWxQbGF5ZXJTdGF0ZS5wbGF5ZXJTdGF0ZSA9PT1cblx0XHRcdFx0XHRcdFx0XHRcdFx0UExBWUVSX1NUQVRFLlBBVVNFRCAmJiAoXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0PEljb24gbmFtZT1cInZvbHVtZVwiIC8+XG5cdFx0XHRcdFx0XHRcdFx0XHRcdCl9XG5cdFx0XHRcdFx0XHRcdFx0PC90ZD5cblx0XHRcdFx0XHRcdFx0XHQ8dGQ+e3NvbmcudGl0bGV9PC90ZD5cblx0XHRcdFx0XHRcdFx0XHQ8dGQ+e3NvbmcuYXJ0aXN0fTwvdGQ+XG5cdFx0XHRcdFx0XHRcdFx0PHRkPntzb25nLmFsYnVtfTwvdGQ+XG5cdFx0XHRcdFx0XHRcdFx0PHRkPlxuXHRcdFx0XHRcdFx0XHRcdFx0e3NlY29uZHNUb01pbnV0ZXNBbmRTZWNvbmRzKFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRzb25nLmR1cmF0aW9uIHx8IDAsXG5cdFx0XHRcdFx0XHRcdFx0XHQpfVxuXHRcdFx0XHRcdFx0XHRcdDwvdGQ+XG5cdFx0XHRcdFx0XHRcdDwvdHI+XG5cdFx0XHRcdFx0XHQpKX1cblx0XHRcdFx0XHQ8L3Rib2R5PlxuXHRcdFx0XHQ8L3RhYmxlPlxuXHRcdFx0PC9kaXY+XG5cdFx0PC8+XG5cdCk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBBcHA7XG4iXX0=